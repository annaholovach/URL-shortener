name: CI build

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  checkout_code:
    name: Checkout Code
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

  deploy_pm2:
    name: Deploy to PM2 on EC2
    runs-on: ubuntu-latest
    needs: checkout_code  

    steps:
    - name: Copy .env file to EC2 using SSM
      uses: peterkimzz/aws-ssm-send-command@master
      with:
        aws-region: ${{ secrets.AWS_REGION }}
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        instance-ids: ${{ secrets.EC2_INSTANCE_ID }}
        working-directory: /home/ubuntu/URL-shortener
        commands: |
          echo "PORT=5000" > .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=3306" >> .env
          echo "BASE_URL=${{ secrets.BASE_URL }}" >> .env
          echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> .env
          echo "REDIS_PORT=6379" >> .env

    - name: Pull the latest code and install dependencies
      uses: peterkimzz/aws-ssm-send-command@master
      with:
        aws-region: ${{ secrets.AWS_REGION }}
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        instance-ids: ${{ secrets.EC2_INSTANCE_ID }}
        working-directory: /home/ubuntu/URL-shortener
        commands: |
          git pull origin master
          npm install

    - name: Restart PM2 with the updated application
      uses: peterkimzz/aws-ssm-send-command@master
      with:
        aws-region: ${{ secrets.AWS_REGION }}
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        instance-ids: ${{ secrets.EC2_INSTANCE_ID }}
        working-directory: /home/ubuntu/URL-shortener
        commands: |
          pm2 restart url-shortener

  verify_deploy:
    name: Verify Deployment
    runs-on: ubuntu-latest
    needs: deploy_pm2 

    steps:
    - name: Verify Deployment
      uses: peterkimzz/aws-ssm-send-command@master
      with:
        aws-region: ${{ secrets.AWS_REGION }}
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        instance-ids: ${{ secrets.EC2_INSTANCE_ID }}
        commands: |
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:5000/health)
          if [ "$STATUS" -eq 200 ]; then
            echo "Deployment successful"
          else
            echo "Deployment failed"
            exit 1


